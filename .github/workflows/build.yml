---
name: Build native gems

on:
  - push
  - pull_request

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ruby_target: x86_64-linux
          - ruby_target: aarch64-linux
          - ruby_target: arm-linux
          - ruby_target: x86-linux
          # - ruby_target: arm64-darwin
          # - ruby_target: x86-mingw32
          # - ruby_target: x64-mingw-ucrt
          # - ruby_target: x64-mingw32
          # - ruby_target: x86-linux
          # - ruby_target: arm64-darwin
          # - ruby_target: x86-mingw32
          # - ruby_target: x64-mingw-ucrt
          # - ruby_target: x64-mingw32
          # - ruby_target: x86_64-darwin
    steps:
      - uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/build-cache
          key: ${{ runner.os }}-${{ matrix.ruby_target }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ruby_target }}-buildx

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: ðŸ§± Build gem
        env:
          RCD_DOCKER_BUILD: "docker buildx build --cache-from=type=local,src=/tmp/build-cache --cache-to=type=local,dest=/tmp/build-cache-new --load"
        run: |
          docker buildx create --driver docker-container --use
          gem install rake-compiler-dock rake-compiler
          cd examples/rust_ruby_example
          rake gem:native:${{ matrix.platform.ruby_target }}
          rm -rf /tmp/build-cache
          mv /tmp/build-cache-new /tmp/build-cache
      - uses: actions/upload-artifact@v2
        with:
          name: native-gem
          path: "examples/*/pkg/*-${{ matrix.platform.ruby_target }}.gem"
          retention-days: 1